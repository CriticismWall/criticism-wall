version: '3'
networks:
  criticism:
        driver: bridge

# please run 'gradle assemble' before docker-compose run
services:
  db:
    image: postgres:10.0
    container_name: criticism_db
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      criticism:
        aliases:
          - db
    environment:
      POSTGRES_DB: criticism
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234

  backend-api:
    build:
      context: backend-api/.
    image: backend-api:latest
    container_name: criticism_backend-api
    ports:
      - 8085:8085
    #volumes:
    #  - ./logs/backend:/logs
    networks:
      - criticism
    depends_on:
      - db
    environment:
      SERVER_PORT: 8085
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/criticism
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234

  frontend-api:
    build:
      context: frontend-api/.
    image: frontend-api:latest
    container_name: criticism_frontend-api
    ports:
      - 8086:8086
    #volumes:
    #  - ./logs/backend:/logs
    networks:
      - criticism
    depends_on:
      - db
    environment:
      SERVER_PORT: 8086
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/criticism
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1234

volumes:
  pgdata: